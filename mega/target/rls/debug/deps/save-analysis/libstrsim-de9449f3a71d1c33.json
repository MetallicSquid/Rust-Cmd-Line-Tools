{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0","program":"C:\\Users\\gcmac\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","strsim","C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=de9449f3a71d1c33","-C","extra-filename=-de9449f3a71d1c33","--out-dir","c:\\Users\\gcmac\\Desktop\\rust-cmd-line-tools\\mega\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\gcmac\\Desktop\\rust-cmd-line-tools\\mega\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\gcmac\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\gcmac\\Desktop\\rust-cmd-line-tools\\mega\\target\\rls\\debug\\deps\\libstrsim-de9449f3a71d1c33.rmeta"},"prelude":{"crate_id":{"name":"strsim","disambiguator":[6895348605449192186,18198769832945009423]},"crate_root":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src","external_crates":[{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12578048494495979596,2047601184299498072]}},{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[9458200224090790355,13573932773036415113]}},{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17212932621614837670,6562776948220383497]}},{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[760535750034822653,11118367618612043106]}},{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9863315158332858256,17125058067034963864]}},{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[4687805557387852666,9943473115938981341]}},{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11895006708321731812,14562333644307237348]}},{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3795917533932740915,1352930594861700352]}},{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14246119625412523820,1488400038702589601]}},{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[301469929213911528,4015090225475952437]}},{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[2057170103176572375,2047842178592089941]}},{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5373388065014169986,7291481803049279744]}},{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11217907578908536000,17992819105755382748]}}],"span":{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","byte_start":0,"byte_end":21752,"line_start":1,"line_end":786,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","byte_start":0,"byte_end":21752,"line_start":1,"line_end":786,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":27},{"krate":0,"index":32},{"krate":0,"index":30},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26}],"decl_id":null,"docs":" This library implements string similarity metrics.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","byte_start":184,"byte_end":203,"line_start":9,"line_end":9,"column_start":5,"column_end":24},"name":"DifferentLengthArgs","qualname":"::StrSimError::DifferentLengthArgs","value":"StrSimError::DifferentLengthArgs","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","byte_start":166,"byte_end":177,"line_start":8,"line_end":8,"column_start":10,"column_end":21},"name":"StrSimError","qualname":"::StrSimError","value":"StrSimError::{DifferentLengthArgs}","parent":null,"children":[{"krate":0,"index":28}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","byte_start":216,"byte_end":229,"line_start":12,"line_end":12,"column_start":10,"column_end":23},"name":"HammingResult","qualname":"::HammingResult","value":"Result<usize, StrSimError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","byte_start":601,"byte_end":608,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"hamming","qualname":"::hamming","value":"fn (a: &str, b: &str) -> HammingResult","parent":null,"children":[],"decl_id":null,"docs":" Calculates the number of positions in the two strings where the characters\n differ. Returns an error if the strings have different lengths.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","byte_start":1240,"byte_end":1244,"line_start":45,"line_end":45,"column_start":8,"column_end":12},"name":"jaro","qualname":"::jaro","value":"fn (a: &str, b: &str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Calculates the Jaro similarity between two strings. The returned value\n is between 0.0 and 1.0 (higher value means more similar).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","byte_start":3070,"byte_end":3082,"line_start":116,"line_end":116,"column_start":8,"column_end":20},"name":"jaro_winkler","qualname":"::jaro_winkler","value":"fn (a: &str, b: &str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Like Jaro but gives a boost to strings that have a common prefix.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","byte_start":3838,"byte_end":3849,"line_start":143,"line_end":143,"column_start":8,"column_end":19},"name":"levenshtein","qualname":"::levenshtein","value":"fn (a: &str, b: &str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Calculates the minimum number of insertions, deletions, and substitutions\n required to change one string into the other.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","byte_start":5180,"byte_end":5202,"line_start":186,"line_end":186,"column_start":8,"column_end":30},"name":"normalized_levenshtein","qualname":"::normalized_levenshtein","value":"fn (a: &str, b: &str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Calculates a normalized score of the Levenshtein algorithm between 0.0 and\n 1.0 (inclusive), where 1.0 means the strings are the same.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","byte_start":5598,"byte_end":5610,"line_start":201,"line_end":201,"column_start":8,"column_end":20},"name":"osa_distance","qualname":"::osa_distance","value":"fn (a: &str, b: &str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Like Levenshtein but allows for adjacent transpositions. Each substring can\n only be edited once.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","byte_start":7404,"byte_end":7423,"line_start":255,"line_end":255,"column_start":8,"column_end":27},"name":"damerau_levenshtein","qualname":"::damerau_levenshtein","value":"fn (a: &str, b: &str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Like optimal string alignment, but substrings can be edited an unlimited\n number of times, and the triangle inequality holds.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\gcmac\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.8.0\\src\\lib.rs","byte_start":9837,"byte_end":9867,"line_start":329,"line_end":329,"column_start":8,"column_end":38},"name":"normalized_damerau_levenshtein","qualname":"::normalized_damerau_levenshtein","value":"fn (a: &str, b: &str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Calculates a normalized score of the Damerau–Levenshtein algorithm between\n 0.0 and 1.0 (inclusive), where 1.0 means the strings are the same.","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}